# Build stage
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Set environment variables
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_ENV production
ARG NEXT_PUBLIC_CHAT_WS_URL
ENV NEXT_PUBLIC_CHAT_WS_URL=${NEXT_PUBLIC_CHAT_WS_URL}
ARG NEXT_PUBLIC_REQUEST_DEPOSIT
ENV NEXT_PUBLIC_REQUEST_DEPOSIT=${NEXT_PUBLIC_REQUEST_DEPOSIT}
ARG NEXT_PUBLIC_HASURA_ADMIN_SECRET
ENV NEXT_PUBLIC_HASURA_ADMIN_SECRET=${NEXT_PUBLIC_HASURA_ADMIN_SECRET}
ARG NEXT_PUBLIC_HASURA_ENDPOINT
ENV NEXT_PUBLIC_HASURA_ENDPOINT=${NEXT_PUBLIC_HASURA_ENDPOINT}
ARG NEXT_PUBLIC_GHOST_API_URL
ENV NEXT_PUBLIC_GHOST_API_URL=${NEXT_PUBLIC_GHOST_API_URL}
ARG NEXT_PUBLIC_API_KEY
ENV NEXT_PUBLIC_API_KEY=${NEXT_PUBLIC_API_KEY}  
ARG NEXT_PUBLIC_BASEURL_PAYMENT
ENV NEXT_PUBLIC_BASEURL_PAYMENT=${NEXT_PUBLIC_BASEURL_PAYMENT}
ARG NEXT_PUBLIC_URL_CALLBACK
ENV NEXT_PUBLIC_URL_CALLBACK=${NEXT_PUBLIC_URL_CALLBACK}
ARG NEXT_PUBLIC_API_BASE_URL
ENV NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
ARG NEXT_PUBLIC_API_URL_DEV
ENV NEXT_PUBLIC_API_URL_DEV=${NEXT_PUBLIC_API_URL_DEV}
ARG NEXT_PUBLIC_API_URL_PROD
ENV NEXT_PUBLIC_API_URL_PROD=${NEXT_PUBLIC_API_URL_PROD}
ARG CODEGEN_HASURA_GRAPHQL_ADMIN_SECRET
ENV CODEGEN_HASURA_GRAPHQL_ADMIN_SECRET=${CODEGEN_HASURA_GRAPHQL_ADMIN_SECRET}
ARG CODEGEN_HASURA_ENDPOINT
ENV CODEGEN_HASURA_ENDPOINT=${CODEGEN_HASURA_ENDPOINT}

ARG GHOST_API_KEY
ENV GHOST_API_KEY=${GHOST_API_KEY}  


# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS runner

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production dependencies only
RUN npm ci --only=production

# Copy built assets from builder stage
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/.env.production ./

# Set environment variables
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_ENV production

# Expose the port the app runs on
EXPOSE 3000

# Start the application in production mode
CMD ["npm", "start"] 

# # Build stage
# FROM node:18-alpine AS builder

# WORKDIR /app

# # Copy package files
# COPY package*.json ./

# # Install dependencies
# RUN npm ci

# # Copy source code
# COPY . .

# # Copy file .env.production trước khi build
# COPY .env.production .env.production

# # Set environment variables
# ENV NEXT_TELEMETRY_DISABLED=1
# ENV NODE_ENV=production

# # Next.js sẽ đọc file .env.production tại thời điểm build
# RUN npm run build

# # Production stage
# FROM node:18-alpine AS runner

# WORKDIR /app

# # Copy package files
# COPY package*.json ./

# # Install production dependencies only
# RUN npm ci --only=production

# # Copy built assets from builder stage
# COPY --from=builder /app/.next ./.next
# COPY --from=builder /app/public ./public
# COPY --from=builder /app/next.config.js ./
# COPY --from=builder /app/.env.production ./

# # Set environment variables
# ENV NEXT_TELEMETRY_DISABLED=1
# ENV NODE_ENV=production

# # Định nghĩa ARG để nhận biến từ quá trình build
# ARG NEXT_PUBLIC_CHAT_WS_URL
# ARG NEXT_PUBLIC_HASURA_ENDPOINT
# ARG NEXT_PUBLIC_HASURA_URL
# ARG NEXT_PUBLIC_HASURA_ADMIN_SECRET
# ARG NEXT_PUBLIC_GHOST_API_URL

# # Đặt các biến môi trường để sử dụng trong ứng dụng
# ENV NEXT_PUBLIC_CHAT_WS_URL=${NEXT_PUBLIC_CHAT_WS_URL}
# ENV NEXT_PUBLIC_HASURA_ENDPOINT=${NEXT_PUBLIC_HASURA_ENDPOINT}
# ENV NEXT_PUBLIC_HASURA_URL=${NEXT_PUBLIC_HASURA_URL}
# ENV NEXT_PUBLIC_HASURA_ADMIN_SECRET=${NEXT_PUBLIC_HASURA_ADMIN_SECRET}
# ENV NEXT_PUBLIC_GHOST_API_URL=${NEXT_PUBLIC_GHOST_API_URL}

# # Expose the port the app runs on
# EXPOSE 3000

# # Start the application in production mode
# CMD ["npm", "start"]



