version: '3.8'

services:
  searches:
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - .:/app
    env_file:
      - .env
    command: npm run dev
    restart: always
    depends_on:
      - elasticsearch
    networks:
      my_custom_network:
        ipv4_address: ${SEARCH_IP}

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - cluster.routing.allocation.disk.watermark.low=85%
      - cluster.routing.allocation.disk.watermark.high=90%
      - cluster.routing.allocation.disk.watermark.flood_stage=95%
      - cluster.routing.allocation.total_shards_per_node=2000
      - action.auto_create_index=true
      - indices.memory.index_buffer_size=30%
      - cluster.routing.allocation.enable=all
      - cluster.max_shards_per_node=2000
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      my_custom_network:
        ipv4_address: ${ELASTICSEARCH_IP}
    deploy:
      resources:
        limits:
          memory: 12G
  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.0
    environment:
      - ELASTICSEARCH_HOSTS=http://${ELASTICSEARCH_IP}:9200
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
    networks:
      my_custom_network:
        ipv4_address: ${KIBANA_IP}

volumes:
  elasticsearch_data:


networks:
  my_custom_network:
    external: true
